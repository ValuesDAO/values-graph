type Transaction @entity {
  id: ID!
  timestamp: BigInt!
  blockNumber: BigInt!
  blockHash: Bytes!
  from: Bytes!
  to: Bytes
  value: BigInt!
  gasPrice: BigInt!
}

type Approval @entity {
  id: ID!
  transaction: Transaction!
  timestamp: BigInt!
  owner: Bytes! # address
  spender: Bytes! # address
  value: BigInt! # uint256
}

type LogRebase @entity {
  id: ID!
  transaction: Transaction!
  timestamp: BigInt!
  epoch: BigInt! # uint256
  rebase: BigInt! # uint256
  index: BigInt! # uint256
}

type LogStakingContractUpdated @entity {
  id: ID!
  transaction: Transaction!
  timestamp: BigInt!
  stakingContract: Bytes! # address
}

type LogSupply @entity {
  id: ID!
  transaction: Transaction!
  epoch: BigInt! # uint256
  timestamp: BigInt! # uint256
  totalSupply: BigInt! # uint256
}

type Transfer @entity {
  id: ID!
  transaction: Transaction!
  timestamp: BigInt!
  from: Bytes! # address
  to: Bytes! # address
  value: BigInt! # uint256
}

type ChangeActivated @entity {
  id: ID!
  transaction: Transaction!
  timestamp: BigInt!
  managing: Int! # uint8
  activated: Bytes! # address
  result: Boolean! # bool
}

type ChangeQueued @entity {
  id: ID!
  transaction: Transaction!
  timestamp: BigInt!
  managing: Int! # uint8
  queued: Bytes! # address
}

type CreateDebt @entity {
  id: ID!
  transaction: Transaction!
  timestamp: BigInt!
  debtor: Bytes! # address
  token: Bytes! # address
  amount: BigInt! # uint256
  value: BigInt! # uint256
}

type Deposit @entity {
  id: ID!
  transaction: Transaction!
  timestamp: BigInt!
  token: Bytes! # address
  amount: BigInt! # uint256
  value: BigInt! # uint256
}

type OwnershipPulled @entity {
  id: ID!
  transaction: Transaction!
  timestamp: BigInt!
  previousOwner: Bytes! # address
  newOwner: Bytes! # address
}

type OwnershipPushed @entity {
  id: ID!
  transaction: Transaction!
  timestamp: BigInt!
  previousOwner: Bytes! # address
  newOwner: Bytes! # address
}

type RepayDebt @entity {
  id: ID!
  transaction: Transaction!
  timestamp: BigInt!
  debtor: Bytes! # address
  token: Bytes! # address
  amount: BigInt! # uint256
  value: BigInt! # uint256
}

type ReservesAudited @entity {
  id: ID!
  transaction: Transaction!
  timestamp: BigInt!
  totalReserves: BigInt! # uint256
}

type ReservesManaged @entity {
  id: ID!
  transaction: Transaction!
  timestamp: BigInt!
  token: Bytes! # address
  amount: BigInt! # uint256
}

type ReservesUpdated @entity {
  id: ID!
  transaction: Transaction!
  timestamp: BigInt!
  totalReserves: BigInt! # uint256
}

type RewardsMinted @entity {
  id: ID!
  transaction: Transaction!
  timestamp: BigInt!
  caller: Bytes! # address
  recipient: Bytes! # address
  amount: BigInt! # uint256
}

type Withdrawal @entity {
  id: ID!
  transaction: Transaction!
  timestamp: BigInt!
  token: Bytes! # address
  amount: BigInt! # uint256
  value: BigInt! # uint256
}

type ProtocolMetric @entity {
  id: ID!
  timestamp: BigInt!
  valuesCirculatingSupply: BigDecimal!
  sValuesCirculatingSupply: BigDecimal!
  totalSupply: BigDecimal!
  valuesPrice: BigDecimal!
  marketCap: BigDecimal!
  totalValueLocked: BigDecimal!
  treasuryRiskFreeValue: BigDecimal!
  treasuryMarketValue: BigDecimal!
  nextEpochRebase: BigDecimal!
  nextDistributedValues: BigDecimal!
  treasuryMaiRiskFreeValue: BigDecimal!
  treasuryMaiMarketValue: BigDecimal!
  treasuryFraxRiskFreeValue: BigDecimal!
  treasuryFraxMarketValue: BigDecimal!
  treasuryWmaticRiskFreeValue: BigDecimal!
  treasuryWmaticMarketValue: BigDecimal!
  currentAPY: BigDecimal!
  runway2dot5k: BigDecimal
  runway5k: BigDecimal
  runway7dot5k: BigDecimal
  runway10k: BigDecimal
  runway20k: BigDecimal
  runway50k: BigDecimal
  runway70k: BigDecimal
  runway100k: BigDecimal
  runwayCurrent: BigDecimal
  treasuryValuesMaiPOL: BigDecimal!
  treasuryValuesFraxPOL: BigDecimal!
  treasuryValuesWmaticPOL: BigDecimal!
}
